{"remainingRequest":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wyt\\git_res\\MeiTuan\\myapp\\src\\views\\comment\\index.vue?vue&type=style&index=0&id=7ef80078&lang=scss&scoped=true&","dependencies":[{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\src\\views\\comment\\index.vue","mtime":1601278451613},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":1600696235571},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1600696234771},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\postcss-loader\\src\\index.js","mtime":1600696235657},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1600696233774},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600696235595},{"path":"E:\\wyt\\git_res\\MeiTuan\\myapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1600696234770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbW1lbnRCb3h7DQogICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDRweCk7DQp9DQoNCi5iZWZvcmVfdGFnew0KICAgIGJvcmRlci10b3A6IDAuNjVyZW0gc29saWQgI2Y0ZjRmNDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/comment","sourcesContent":["<template>\r\n    <div class=\"commentBox\" ref=\"commentBox\">\r\n        <div>\r\n            <score :delivery=\"comment.delivery\" :score=\"comment.score\" :packing=\"comment.packing\" :flavor=\"comment.flavor\"></score>\r\n            <div class=\"before_tag\"></div>\r\n            <tag :tag=\"comment.label\" :currentType=\"type\" @change=\"change\"></tag>\r\n            <list :list=\"comment.rate\"></list>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport score from './score'\r\nimport list from './list'\r\nimport tag from './tag'\r\nimport {getComment} from '../../api/comment'\r\nimport BScroll from \"better-scroll\"\r\n    export default {\r\n        data(){\r\n            return{\r\n                type:1,\r\n                comment:{},\r\n                commentScroll:null\r\n            }\r\n        },\r\n        components:{\r\n            score,\r\n            list,\r\n            tag\r\n        },\r\n        methods:{\r\n            getData(){\r\n                return new Promise(resolve=>{\r\n                    getComment({\r\n                        id:this.$route.query.id,\r\n                        type:this.type\r\n                    }).then(response=>{\r\n                        this.comment = response.data;\r\n                        resolve();\r\n                    });\r\n                });\r\n                \r\n            },\r\n            change(id){\r\n                this.type = id;\r\n                this.getData();\r\n            }\r\n        },\r\n        created(){\r\n            this.getData().then(()=>{\r\n                this.$nextTick(()=>{\r\n                    this.commentScroll = new BScroll(this.$refs.commentBox,{\r\n                        bounce:false,\r\n                        click:false\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.commentBox{\r\n    height: calc(100vh - 44px);\r\n}\r\n\r\n.before_tag{\r\n    border-top: 0.65rem solid #f4f4f4;\r\n}\r\n</style>"]}]}